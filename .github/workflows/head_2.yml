on: [push, pull_request]

env:
    APT: sudo apt install -y --no-install-recommends
    # Set the python path manually to include /usr/-/python2.7/dist-packages
    # as this is where apt-get installs python packages.
    ROSINSTALL_FILE: $GITHUB_WORKSPACE/dependencies.rosinstall
    CATKIN_OPTIONS: $GITHUB_WORKSPACE/catkin.options

jobs:
    jammy_deb_packages:
        runs-on: ubuntu-22.04

        steps:
            - uses: actions/checkout@v3
            - run: sudo make install-deps
            - run: sudo make install-jsonnet
            - run: $APT fakeroot devscripts build-essential
            - run: |
                make deb-build DEB_TARGET=jammy
                make deb-install DEB_TARGET=jammy
                # make cmake_dependency  # requires ROS


    focal_deb_packages:
        runs-on: ubuntu-20.04

        env:
            ROS_DISTRO: noetic
            ROS_HOSTNAME: localhost
            ROS_CI_DESKTOP: focal

        steps:
            - uses: actions/checkout@v3
            - run: sudo make install-ros ROS_DISTRO=$ROS_DISTRO UBUNTU_DISTRO=$ROS_CI_DESKTOP
            - run: rosdep update
            - run: sudo make install-deps
            - run: sudo make install-jsonnet
            - run: $APT fakeroot devscripts build-essential
            - run: |
                source /opt/ros/$ROS_DISTRO/setup.bash
                make deb-build DEB_TARGET=focal
                make deb-install DEB_TARGET=focal
                make cmake_dependency


    clang_noros:
        runs-on: ubuntu-22.04
        steps:
            - uses: actions/checkout@v3
            - run: sudo apt update
            - run: sudo make install-deps
            - run: sudo make install-jsonnet
            - run: make build-tests TYPE=Debug OPTIONS=cpp11_on_noros TARGETS="all" TC=clang ARGS=-V


    jammy_gcc_noros:
        runs-on: ubuntu-22.04
        steps:
            - uses: actions/checkout@v3
            - run: sudo apt update
            - run: sudo make install-deps
            - run: sudo make install-jsonnet
            - run: make build-tests TYPE=Debug OPTIONS=cpp11_on_noros TARGETS="all" TC=gcc ARGS=-V


    focal_gcc_noros:
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@v3
            - run: sudo apt update
            - run: sudo make install-deps
            - run: sudo make install-jsonnet
            - run: make build-tests TYPE=Debug OPTIONS=cpp11_on_noros TARGETS="all" TC=gcc ARGS=-V


    focal_clang_ros:
        runs-on: ubuntu-20.04

        env:
            ROS_DISTRO: noetic
            ROS_HOSTNAME: localhost
            ROS_CI_DESKTOP: focal

        steps:
            - uses: actions/checkout@v3
            - run: sudo make install-ros ROS_DISTRO=$ROS_DISTRO UBUNTU_DISTRO=$ROS_CI_DESKTOP
            - run: rosdep update
            - run: sudo make install-deps
            - run: sudo make install-jsonnet
            - run: |
                source /opt/ros/$ROS_DISTRO/setup.bash
                make build-tests TYPE=Debug OPTIONS=ros TARGETS="all" TC=clang ARGS=-V


    focal_gcc_ros:
        runs-on: ubuntu-20.04

        env:
            ROS_DISTRO: noetic
            ROS_HOSTNAME: localhost
            ROS_CI_DESKTOP: focal

        steps:
            - uses: actions/checkout@v3
            - run: sudo make install-ros ROS_DISTRO=$ROS_DISTRO UBUNTU_DISTRO=$ROS_CI_DESKTOP
            - run: rosdep update
            - run: sudo make install-deps
            - run: sudo make install-jsonnet
            - run: |
                source /opt/ros/$ROS_DISTRO/setup.bash
                make build-tests TYPE=Debug OPTIONS=ros TARGETS="all" TC=gcc ARGS=-V


    jammy_static_checks:
        runs-on: ubuntu-22.04

        steps:
            - uses: actions/checkout@v3
            - run: sudo apt update
            - run: sudo apt upgrade
            - run: $APT cppcheck
            - run: $APT python3-pip python3-setuptools
            - run: sudo pip3 install scspell3k
            - run: make cppcheck
            - run: make spell


    focal_gcc_ros_scanbuild:
        runs-on: ubuntu-20.04

        env:
            ROS_DISTRO: noetic
            ROS_HOSTNAME: localhost
            ROS_CI_DESKTOP: focal

        steps:
            - uses: actions/checkout@v3
            - run: sudo make install-ros ROS_DISTRO=$ROS_DISTRO UBUNTU_DISTRO=$ROS_CI_DESKTOP
            - run: rosdep update
            - run: $APT cmake libboost-all-dev libeigen3-dev
            - run: $APT libyaml-cpp-dev octave
            - run: $APT clang-tools-12 clang-tidy-12
            - run: $APT libprotobuf-dev protobuf-compiler
            - run: sudo make install-jsonnet
            - run: |
                source /opt/ros/$ROS_DISTRO/setup.bash
                make clangcheck SCANBUILD=scan-build-12 OPTIONS=ros_tidy TC=gcc
