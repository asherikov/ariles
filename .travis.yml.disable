language: cpp

notifications:
    email:
        recipients:
          - asherikov@yandex.com
        on_success: always
        on_failure: always

services:
  - docker
os: linux


jobs:
    include:

# special cases
      - name: "disabled_core"
        dist: xenial
        compiler: gcc
        before_install:
          - make travis-apt-clean
          - sudo apt update
          - sudo apt install -y cmake libboost-all-dev libeigen3-dev
        script:
          - make build TYPE=Debug OPTIONS=no_core TARGETS="all"


      - name: "test_cmake"
        dist: xenial
        compiler: gcc
        before_install:
          - sudo apt update
          - sudo apt install -y cmake libboost-all-dev libeigen3-dev
          - sudo apt install -y octave libpugixml-dev libyaml-cpp-dev
        script:
          - sudo make install-jsonnet
          - make test-cmake


      - name: "deb_packages"
        dist: xenial
        compiler: gcc

        env:
          - ROS_DISTRO=kinetic
          - CI_SOURCE_PATH=$(pwd)
          - ROS_CI_DESKTOP=${TRAVIS_DIST}
          - ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
          - CATKIN_OPTIONS=$CI_SOURCE_PATH/catkin.options
          # Set the python path manually to include /usr/-/python2.7/dist-packages
          # as this is where apt-get installs python packages.
          - PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/dist-packages:/usr/local/lib/python2.7/dist-packages

        # Install system dependencies, namely a very barebones ROS setup.
        before_install:
          - sudo make install-ros ROS_DISTRO=$ROS_DISTRO UBUNTU_DISTRO=$ROS_CI_DESKTOP
          - source /opt/ros/${ROS_DISTRO}/setup.bash
          - rosdep update
          - sudo apt install -y cmake libboost-all-dev libeigen3-dev
          - sudo apt install -y devscripts build-essential octave libpugixml-dev libyaml-cpp-dev fakeroot rapidjson-dev
          - sudo apt install -y libprotobuf-dev protobuf-compiler

        script:
          - sudo make install-jsonnet
          - make deb-build DEB_TARGET=${TRAVIS_DIST}
          - make deb-install DEB_TARGET=${TRAVIS_DIST}
          - make cmake_dependency

      - name: "bionic_deb_packages"
        dist: bionic
        compiler: gcc

        env:
          - ROS_DISTRO=melodic
          - CI_SOURCE_PATH=$(pwd)
          - ROS_CI_DESKTOP=${TRAVIS_DIST}
          - ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
          - CATKIN_OPTIONS=$CI_SOURCE_PATH/catkin.options
          # Set the python path manually to include /usr/-/python2.7/dist-packages
          # as this is where apt-get installs python packages.
          - PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/dist-packages:/usr/local/lib/python2.7/dist-packages

        # Install system dependencies, namely a very barebones ROS setup.
        before_install:
          - sudo make install-ros ROS_DISTRO=$ROS_DISTRO UBUNTU_DISTRO=$ROS_CI_DESKTOP
          - source /opt/ros/${ROS_DISTRO}/setup.bash
          - rosdep update
          - sudo apt install -y cmake libboost-all-dev libeigen3-dev
          - sudo apt install -y devscripts build-essential octave libpugixml-dev libyaml-cpp-dev fakeroot rapidjson-dev libmsgpack-dev
          - sudo apt install -y libprotobuf-dev protobuf-compiler

        script:
          - sudo make install-jsonnet
          - make deb-build DEB_TARGET=${TRAVIS_DIST}
          - make deb-install DEB_TARGET=${TRAVIS_DIST}
          - make cmake_dependency


      - name: "gcc_cpp11_noros"
        dist: xenial
        compiler: gcc
        before_install:
          - sudo apt update
          - sudo apt install -y cmake libboost-all-dev libeigen3-dev
          - sudo apt install -y octave libpugixml-dev libyaml-cpp-dev graphviz
          - sudo apt install -y libprotobuf-dev protobuf-compiler
        script:
          - sudo make install-jsonnet
          - make build-tests TYPE=Debug OPTIONS=cpp11_on_noros_${TRAVIS_DIST} TARGETS="all" ARGS=-V

      - name: "clang_cpp11_noros"
        dist: xenial
        compiler: clang
        before_install:
          - sudo apt update
          - sudo apt install -y cmake libboost-all-dev libeigen3-dev
          - sudo apt install -y octave libpugixml-dev libyaml-cpp-dev graphviz
          - sudo apt install -y libprotobuf-dev protobuf-compiler
        script:
          - sudo make install-jsonnet
          - make build-tests TYPE=Debug OPTIONS=cpp11_on_noros_${TRAVIS_DIST} TARGETS="all" ARGS=-V

      - name: "bionic_gcc_cpp11_noros"
        dist: bionic
        compiler: gcc
        before_install:
          - sudo apt update
          - sudo apt install -y cmake libboost-all-dev libeigen3-dev
          - sudo apt install -y octave libpugixml-dev libyaml-cpp-dev rapidjson-dev libmsgpack-dev graphviz
          - sudo apt install -y libprotobuf-dev protobuf-compiler

        script:
          - sudo make install-jsonnet
          - make build-tests TYPE=Debug OPTIONS=cpp11_on_noros_${TRAVIS_DIST} TARGETS="all" ARGS=-V


    # based on https://github.com/felixduvallet/ros-travis-integration/blob/master/.travis.yml
      - name: "gcc_cpp11_ros"
        dist: xenial
        compiler: gcc

        env:
          - ROS_DISTRO=kinetic
          - CI_SOURCE_PATH=$(pwd)
          - ROS_CI_DESKTOP=${TRAVIS_DIST}
          - ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
          - CATKIN_OPTIONS=$CI_SOURCE_PATH/catkin.options
          # Set the python path manually to include /usr/-/python2.7/dist-packages
          # as this is where apt-get installs python packages.
          - PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/dist-packages:/usr/local/lib/python2.7/dist-packages

        # Install system dependencies, namely a very barebones ROS setup.
        before_install:
          - sudo make install-ros ROS_DISTRO=$ROS_DISTRO UBUNTU_DISTRO=$ROS_CI_DESKTOP
          - source /opt/ros/${ROS_DISTRO}/setup.bash
          - rosdep update
          - sudo apt install -y cmake libboost-all-dev libeigen3-dev
          - sudo apt install -y libyaml-cpp-dev octave graphviz
          - sudo apt install -y libprotobuf-dev protobuf-compiler

        script:
          - sudo make install-jsonnet
          - make build-tests TYPE=Debug OPTIONS=ros TARGETS="all" ARGS=-V

      - name: "clang_cpp11_ros"
        dist: xenial
        compiler: clang

        env:
          - ROS_DISTRO=kinetic
          - CI_SOURCE_PATH=$(pwd)
          - ROS_CI_DESKTOP=${TRAVIS_DIST}
          - ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
          - CATKIN_OPTIONS=$CI_SOURCE_PATH/catkin.options
          # Set the python path manually to include /usr/-/python2.7/dist-packages
          # as this is where apt-get installs python packages.
          - PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/dist-packages:/usr/local/lib/python2.7/dist-packages

        # Install system dependencies, namely a very barebones ROS setup.
        before_install:
          - sudo make install-ros ROS_DISTRO=$ROS_DISTRO UBUNTU_DISTRO=$ROS_CI_DESKTOP
          - source /opt/ros/${ROS_DISTRO}/setup.bash
          - rosdep update
          - sudo apt install -y cmake libboost-all-dev libeigen3-dev
          - sudo apt install -y libyaml-cpp-dev octave graphviz
          - sudo apt install -y libprotobuf-dev protobuf-compiler

        script:
          - sudo make install-jsonnet
          - make build-tests TYPE=Debug OPTIONS=ros TARGETS="all" ARGS=-V

      - name: "bionic_gcc_cpp11_ros"
        dist: bionic
        compiler: gcc

        env:
          - ROS_DISTRO=melodic
          - CI_SOURCE_PATH=$(pwd)
          - ROS_CI_DESKTOP=${TRAVIS_DIST}
          - ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
          - CATKIN_OPTIONS=$CI_SOURCE_PATH/catkin.options
          # Set the python path manually to include /usr/-/python2.7/dist-packages
          # as this is where apt-get installs python packages.
          - PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/dist-packages:/usr/local/lib/python2.7/dist-packages

        # Install system dependencies, namely a very barebones ROS setup.
        before_install:
          - sudo make install-ros ROS_DISTRO=$ROS_DISTRO UBUNTU_DISTRO=$ROS_CI_DESKTOP
          - source /opt/ros/${ROS_DISTRO}/setup.bash
          - rosdep update
          - sudo apt install -y cmake libboost-all-dev libeigen3-dev
          - sudo apt install -y libyaml-cpp-dev octave graphviz
          - sudo apt install -y libprotobuf-dev protobuf-compiler

        script:
          - sudo make install-jsonnet
          - make build-tests TYPE=Debug OPTIONS=ros TARGETS="all" ARGS=-V


      - name: "bionic_static_checks"
        dist: bionic
        compiler: gcc

        before_install:
          - sudo apt update
          - sudo apt install -y cppcheck
          - sudo apt install -y python3-pip python3-setuptools
          - sudo pip3 install scspell3k

        script:
          - make cppcheck
          - make spell

      - name: "bionic_gcc_cpp11_ros_scanbuild"
        dist: bionic
        compiler: gcc

        env:
          - ROS_DISTRO=melodic
          - CI_SOURCE_PATH=$(pwd)
          - ROS_CI_DESKTOP=${TRAVIS_DIST}
          - ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
          - CATKIN_OPTIONS=$CI_SOURCE_PATH/catkin.options
          # Set the python path manually to include /usr/-/python2.7/dist-packages
          # as this is where apt-get installs python packages.
          - PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/dist-packages:/usr/local/lib/python2.7/dist-packages

        # Install system dependencies, namely a very barebones ROS setup.
        before_install:
          - sudo make install-ros ROS_DISTRO=$ROS_DISTRO UBUNTU_DISTRO=$ROS_CI_DESKTOP
          - source /opt/ros/${ROS_DISTRO}/setup.bash
          - rosdep update
          - sudo apt install -y cmake libboost-all-dev libeigen3-dev
          - sudo apt install -y libyaml-cpp-dev octave
          - sudo apt install -y clang-tools-9
          - sudo apt install -y libprotobuf-dev protobuf-compiler

        script:
          - sudo make install-jsonnet
          - make clangcheck SCANBUILD=scan-build-9 OPTIONS=ros
